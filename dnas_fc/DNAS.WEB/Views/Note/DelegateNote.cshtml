@model DNAS.Domain.DTO.Note.DelegateNoteModel
@using System.Security.Claims
@inject DNAS.Application.Common.Interface.ICheckExtension commFun
@{
    ViewBag.ApproverDashboard = "active";
}
<div class="content-wrapper">
    <div class="card">
        <div class="card-body">
            @if (Model.noteModel.NoteTitle != "" && Model.noteModel.NoteUID != "")
            {
                <div class="b-block d-md-flex justify-content-between  pb-4">
                    <h4 class="f-s-22 f-w-600 text-black pb-4 text-capitalize ">@Model.noteModel.NoteTitle</h4>
                    <div class="f-s-16 f-w-600 text-success "> @Model.noteModel.NoteUID</div>
                </div>
                <div class="row">
                    <div class="col-md-3">
                        <div class="">
                            <h3 class="f-s-16 f-w-600  text-black pb-1">Category</h3>
                            <div class="f-s-14 f-w-400  text-gray-300 pb-2">@Model.noteModel.CategoryName</div>
                            <hr />
                            @if (Model.noteModel.CategoryName == "Financial")
                            {
                                <h3 class="f-s-16 f-w-600  text-black pb-1">Expense Incurred At</h3>
                                <div class="f-s-14 f-w-400  text-gray-300 pb-2">@Model.noteModel.ExpenseIncurredAtName</div>
                                <hr />
                                <h3 class="f-s-16 f-w-600  text-black pb-1">Nature Of Expense</h3>
                                if (Model.noteModel.NatureOfExpenseCode != "")
                                {
                                    <div class="f-s-14 f-w-400  text-gray-300 pb-2">@Model.noteModel.NatureOfExpenseCode) @Model.noteModel.NatureOfExpensesName</div>
                                }
                                else
                                {
                                    <div class="f-s-14 f-w-400  text-gray-300 pb-2"> @Model.noteModel.NatureOfExpensesName</div>
                                }
                                <hr />
                                <h3 class="f-s-16 f-w-600  text-black pb-1">Expense Amount</h3>

                                <div class="f-s-14 f-w-400  text-gray-300 pb-2">
                                    OPEX : <span class="f-s-14 f-w-600 text-secondary" id="opex"></span><br />
                                    CAPEX : <span class="f-s-14 f-w-600 text-secondary" id="capex"></span><br />
                                    <hr style="width:70%;" />
                                    <b>Total :</b> <span class="f-s-14 f-w-600 text-secondary" id="totalamount"></span>
                                </div>

                                <hr />
                            }
                            <h3 class="f-s-16 f-w-600  text-black pb-1">Note Creator</h3>
                            <div class="f-s-14 f-w-400  text-gray-300 pb-2">@Model.noteModel.FirstName @Model.noteModel.MiddleName @Model.noteModel.LastName</div>
                            <div class="f-s-14 text-gray-300">@Model.noteModel.Department | @Model.noteModel.Grade | @Model.noteModel.DesignationName</div>
                            <div class="f-s-14 f-w-400  text-gray-300 pb-2 pt-2">
                                <i class="mdi  mdi-clock-outline align-middle"></i> - @Model.noteModel.DateOfCreation.ToString("dd MMM yyyy") | @Model.noteModel.DateOfCreation.ToString("hh:mm tt")
                            </div>
                            <hr />
                            <h3 class="f-s-16 f-w-600  text-black pb-1">Overall Note Status</h3>
                            <div class="f-s-15 f-w-400 pb-2">
                                @if (Model.noteModel.NoteStatus == "Pending")
                                {
                                    <span style="color: #004880b8; font-weight:600;">Pending</span>
                                }
                                else if (Model.noteModel.NoteStatus == "Approved")
                                {
                                    <span style="color: #198754; font-weight:600;">Approved</span>
                                }
                                else if (Model.noteModel.NoteStatus == "SendBack")
                                {
                                    <span style="color: #ca282f; font-weight:600;">Sent Back</span>
                                }
                                else if (Model.noteModel.NoteStatus == "Withdraw")
                                {
                                    <span style="color: #ffc107; font-weight:600;">Withdrawn</span>
                                }
                            </div>
                            @if (Model.recomendedapproverModel.Any())
                            {
                                <hr />

                                <h3 class="f-s-16 f-w-600  text-black pb-1">Recommenders/Reviewers</h3>
                                @await Component.InvokeAsync("RecomendedApprover", new { viewModel = HtmlHelperExtension.ConvertToRecomendedApproverComponent(Model.recomendedapproverModel), NoteStatus = Model.noteModel.NoteStatus, viewType = "DelegateNote" })

                            }
                            <hr />
                            <h3 class="f-s-16 f-w-600  text-black pb-1">Approvers</h3>
                            @await Component.InvokeAsync("Approver", new { viewModel = HtmlHelperExtension.ConvertToApproverComponent(Model.approverModel), NoteStatus = Model.noteModel.NoteStatus, viewType = "DelegateNote" })

                            <hr />
                            <h3 class="f-s-16 f-w-600  text-black pb-1">Download Attachment</h3>
                            <div class="d-flex flex-wrap gap-3">
                                @{
                                    int count = 0;
                                }
                                @foreach (var item in Model.attachmentsModel)
                                {
                                    
                                    <a class="btn btn-outline-primary btn-sm attatchmentbox" id="attachfile_@count" href="/Download/file?AttatchedId=@item.AttachmentId" download="@item.DocumentName">
                                        <span class="mdi mdi-paperclip"></span>
                                        @item.DocumentName
                                    </a>
                                    count++;
                                }

                            </div>
                        </div>
                    </div>
                    <div class="col-md-9">
                        <div class="note-preview">
                            <div class="note-container">
                                <div style="width:100%;overflow:auto">
                                    @Html.Raw(Model.noteModel.NoteBody)
                                </div>
                            </div>
                        </div>

                        <div class="post-wrapper">
                            <div class="post">
                                @foreach (var item in Model.commentModel)
                                {
                                    <div class="user-block">
                                        <div style="display:inline-flex">
                                            <span class="username">
                                                @item.FirstName @item.MiddleName @item.LastName
                                            </span>
                                            @if (item.NoteStatus == "ApproveComment")
                                            {
                                                <span style="font-weight:500;padding-left: 10px;color: #888e93;font-size: 13px;">
                                                    Approval Comment
                                                </span>
                                            }
                                            else if (item.NoteStatus == "DelegateComment")
                                            {
                                                <span style="font-weight:500;padding-left: 10px;color: #888e93;font-size: 13px;">
                                                    Delegation Comment
                                                </span>
                                            }
                                            else
                                            {
                                                <span style="font-weight:500;padding-left: 10px;color: #888e93;font-size: 13px;">
                                                    @commFun.AddSpace(item.NoteStatus)
                                                </span>
                                            }
                                        </div>
                                        <span class="description">
                                            <i class="mdi  mdi-clock-outline"></i> - @item.CommentTime.ToString("dd MMM yyyy") | @item.CommentTime.ToString("hh:mm tt")
                                        </span>
                                    </div>

                                    <div class="text-gray-300">
                                        @item.Comment
                                    </div>
                                }
                            </div>
                        </div>

                    </div>
                </div>
            }
            else
            {
                <p style="text-align: center; font-size: 20px; font-weight: 600; padding: 50px 0px 50px 0px;color: #ca282f;">This link not valid for you.</p>
            }
        </div>
    </div>

</div>

@section PostScripts {
    <script type="text/javascript">
        $(document).ready(function () {
            var opex = '@Model.noteModel.OperationalExpenditure';
            if (opex != '') {
                $("#opex").text(formatNumberWithPattern(opex));
            }

            var capex = '@Model.noteModel.CapitalExpenditure';
            if (capex != '') {
                $("#capex").text(formatNumberWithPattern(capex));
            }

            var totalamount = '@Model.noteModel.TotalAmount';
            if (totalamount != '') {
                $("#totalamount").text(formatNumberWithPattern(totalamount));
            }
        });
        function formatNumberWithPattern(num) {
            var decimalPart = (num % 1).toFixed(2).substring(1);  //fraction number
            //num = parseInt(num.split(",").join(""));
            num = num.toString().split('.')[0];
            let newstr = '';
            if (num.length > 10) {
                newstr = num.slice(0, -10) + ',';
                num = num.slice(num.length - 10, num.length);
            }
            if (num.length > 7) {
                if (newstr == '') {
                    newstr = num.slice(0, -7) + ',';
                }
                else {
                    newstr = newstr + num.slice(0, -7) + ',';
                }
                num = num.slice(num.length - 7, num.length);
            }
            if (num.length > 5) {
                if (newstr == '') {
                    newstr = num.slice(0, -5) + ',';
                }
                else {
                    newstr = newstr + num.slice(0, -5) + ',';
                }
                num = num.slice(num.length - 5, num.length);
            }
            if (num.length > 3) {
                if (newstr == '') {
                    newstr = num.slice(0, -3) + ',';
                }
                else {
                    newstr = newstr + num.slice(0, -3) + ',';
                }
                num = num.slice(num.length - 3, num.length);
            }
            if (num.length <= 3) {
                newstr = newstr + num;
            }
            newstr = '₹ ' + newstr + decimalPart;

            return newstr;
        }


        $("#attachfile_0").hover(function () {
            const link = document.querySelector('a#attachfile_0');
            const downloadValue = link.getAttribute('download');
            $(this).css('cursor', 'pointer').attr('title', downloadValue);
        }, function () {
            $(this).css('cursor', 'auto');
        });
        $("#attachfile_1").hover(function () {
            const link = document.querySelector('a#attachfile_1');
            const downloadValue = link.getAttribute('download');
            $(this).css('cursor', 'pointer').attr('title', downloadValue);
        }, function () {
            $(this).css('cursor', 'auto');
        });
        $("#attachfile_2").hover(function () {
            const link = document.querySelector('a#attachfile_2');
            const downloadValue = link.getAttribute('download');
            $(this).css('cursor', 'pointer').attr('title', downloadValue);
        }, function () {
            $(this).css('cursor', 'auto');
        });
        $("#attachfile_3").hover(function () {
            const link = document.querySelector('a#attachfile_3');
            const downloadValue = link.getAttribute('download');
            $(this).css('cursor', 'pointer').attr('title', downloadValue);
        }, function () {
            $(this).css('cursor', 'auto');
        });
        $("#attachfile_4").hover(function () {
            const link = document.querySelector('a#attachfile_4');
            const downloadValue = link.getAttribute('download');
            $(this).css('cursor', 'pointer').attr('title', downloadValue);
        }, function () {
            $(this).css('cursor', 'auto');
        });
    </script>
}
